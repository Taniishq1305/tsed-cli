// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generate DataSource should generate the template with the right options (simple path) 1`] = `
"import {registerProvider} from \\"@tsed/di\\";
import {DataSource} from \\"typeorm\\";
import {Logger} from \\"@tsed/logger\\";

export const TestDatasource = Symbol.for(\\"TestDatasource\\");
export type TestDatasource = DataSource;
export const testDatasource = new DataSource({
  type: \\"mysql\\",
  entities: [],
  host: \\"localhost\\",
  port: 3306,
  username: \\"test\\",
  password: \\"test\\",
  database: \\"test\\"
});


registerProvider<DataSource>({
  provide: TestDatasource,
  type: \\"typeorm:datasource\\",
  deps: [Logger],
  async useAsyncFactory(logger: Logger) {
    await testDatasource.initialize();

    logger.info(\\"Connected with typeorm to database: Test\\");

    return testDatasource;
  },
  hooks: {
    $onDestroy(dataSource) {
      return dataSource.isInitialized && dataSource.close();
    }
  }
});
"
`;

exports[`Generate DataSource should generate the template with the right options (simple path) 2`] = `
"services:
  test:
    image: mysql:8.0.28-oracle
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: test
"
`;
